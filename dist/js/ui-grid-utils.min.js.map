{"version":3,"sources":["ui-grid-utils.js"],"names":["angular","module","service","Grid","uiGridConstants","gridUtil","replaceFieldWithExpression","col","inputStringWithFields","replacedInputWithExpressions","replace","MODEL_COL_FIELD","preEval","field","COL_FIELD","removeHtmlTags","text","String","uiGridCommonUtilsService","$compile","$parse","$interpolate","getRenderedCellValue","row","scope","_getScope","html","cellTemplate","cellValue","getRenderStringValue","string","expressionString","renderedValue","grid","appScope"],"mappings":"CAOA,WACE,YAOAA,SAAQC,OAAO,iBAAkB,gBAInC,WACE,YAEAD,SAAQC,OAAO,iBACZC,QAAQ,4BAA6B,OAAQ,kBAAmB,WAC/D,SAAUC,EAAMC,EAAiBC,GAE/B,QAASC,GAA2BC,EAAKC,GACvC,GAAIC,GAA+BD,EAChCE,QAAQN,EAAgBO,gBAAiB,cAAgBN,EAASO,QAAQL,EAAIM,QAC9EH,QAAQN,EAAgBU,UAAW,8BACtC,OAAOL,GAGT,QAASM,GAAeC,GACtB,MAAOA,GAAOC,OAAOD,GAAMN,QAAQ,YAAa,IAAM,GAIxD,OACEJ,2BAA4BA,EAC5BS,eAAgBA,SAM1B,WACE,YAEAf,SAAQC,OAAO,iBACZC,QAAQ,uBAAwB,2BAA4B,WAAY,SAAU,eACjF,SAAUgB,EAA0BC,EAAUC,EAAQC,GAEpD,QAASC,GAAqBC,EAAKhB,GACjC,GAAIiB,GAAQC,EAAUF,EAAIhB,GAEtBmB,EAAOR,EAAyBZ,2BAA2BC,EAAKA,EAAIoB,cACpEA,EAAeR,EAASO,GAAMF,GAC9BI,EAAYP,EAAaM,EAAaD,QAAQF,EAClD,OAAOI,GAGT,QAASC,GAAqBN,EAAKhB,EAAKuB,GACtC,GAAIN,GAAQC,EAAUF,EAAIhB,GAEtBwB,EAAmBb,EAAyBZ,2BAA2BC,EAAKuB,GAC5EE,EAAgBX,EAAaU,GAAkBP,EACnD,OAAOQ,GAGT,QAASP,GAAUF,EAAKhB,GACtB,GAAIiB,GAAQD,EAAIU,KAAKC,QAIrB,OAHAV,GAAMS,KAAOV,EAAIU,KACjBT,EAAMD,IAAMA,EACZC,EAAMjB,IAAMA,EACLiB,EAKT,OACEF,qBAAsBA,EACtBO,qBAAsBA","file":"ui-grid-utils.min.js","sourcesContent":["/*!\n * ui-grid-utils\n * https://github.com/CRCIT/ui-grid-utils\n * @license Apache-2.0\n * v0.1.1\n * 2016-10-18T05:55:11.547Z\n */\n(function () {\n  'use strict';\n\n  /**\n   * @ngdoc module\n   * @name ui.grid.utils\n   * @description Main plugin module\n   */\n  angular.module('ui.grid.utils', ['ui.grid']);\n\n})();\n\n(function () {\n  'use strict';\n\n  angular.module('ui.grid.utils')\n    .service('uiGridCommonUtilsService', ['Grid', 'uiGridConstants', 'gridUtil',\n      function (Grid, uiGridConstants, gridUtil) {\n\n        function replaceFieldWithExpression(col, inputStringWithFields) {\n          var replacedInputWithExpressions = inputStringWithFields\n            .replace(uiGridConstants.MODEL_COL_FIELD, 'row.entity.' + gridUtil.preEval(col.field))\n            .replace(uiGridConstants.COL_FIELD, 'grid.getCellValue(row, col)');\n          return replacedInputWithExpressions;\n        }\n\n        function removeHtmlTags(text) {\n          return text ? String(text).replace(/<[^>]+>/gm, '') : '';\n        }\n\n        //service body\n        return {\n          replaceFieldWithExpression: replaceFieldWithExpression,\n          removeHtmlTags: removeHtmlTags\n        };\n\n      }]);\n})();\n\n(function () {\n  'use strict';\n\n  angular.module('ui.grid.utils')\n    .service('uiGridRenderService', ['uiGridCommonUtilsService', '$compile', '$parse', '$interpolate',\n      function (uiGridCommonUtilsService, $compile, $parse, $interpolate) {\n\n        function getRenderedCellValue(row, col) {\n          var scope = _getScope(row,col);\n\n          var html = uiGridCommonUtilsService.replaceFieldWithExpression(col, col.cellTemplate);\n          var cellTemplate = $compile(html)(scope);\n          var cellValue = $interpolate(cellTemplate.html())(scope);\n          return cellValue;\n        }\n\n        function getRenderStringValue(row, col, string) {\n          var scope = _getScope(row,col);\n\n          var expressionString = uiGridCommonUtilsService.replaceFieldWithExpression(col, string);\n          var renderedValue = $interpolate(expressionString)(scope);\n          return renderedValue;\n        }\n\n        function _getScope(row, col) {\n          var scope = row.grid.appScope;\n          scope.grid = row.grid;\n          scope.row = row;\n          scope.col = col;\n          return scope;\n        }\n\n        //service body\n\n        return {\n          getRenderedCellValue: getRenderedCellValue,\n          getRenderStringValue: getRenderStringValue\n        };\n\n      }]);\n\n})();\n"]}